# Generated by Django 5.0 on 2024-01-02 19:01

import django.db.models.deletion
from django.db import migrations, models


class Migration(migrations.Migration):

    dependencies = [
        ('main', '0001_initial'),
    ]

    operations = [
        migrations.CreateModel(
            name='Answer',
            fields=[
                ('answer_id', models.CharField(max_length=255, primary_key=True, serialize=False)),
                ('body', models.TextField()),
                ('view_count', models.IntegerField()),
                ('upvote_count', models.IntegerField()),
                ('downvote_count', models.IntegerField()),
            ],
        ),
        migrations.CreateModel(
            name='Comment',
            fields=[
                ('comment_id', models.CharField(max_length=255, primary_key=True, serialize=False)),
                ('body', models.TextField()),
                ('comment_type', models.IntegerField()),
                ('commentable_id', models.CharField(max_length=255)),
                ('upvote_count', models.IntegerField()),
                ('downvote_count', models.IntegerField()),
                ('createdAt', models.DateTimeField()),
                ('updatedAt', models.DateTimeField()),
                ('parent_comment_id', models.OneToOneField(blank=True, null=True, on_delete=django.db.models.deletion.SET_NULL, to='main.comment')),
            ],
        ),
        migrations.CreateModel(
            name='Users',
            fields=[
                ('user_id', models.CharField(max_length=255, primary_key=True, serialize=False)),
                ('user_type', models.IntegerField()),
                ('username', models.CharField(max_length=255, unique=True)),
                ('email', models.EmailField(max_length=254, unique=True)),
                ('password', models.CharField(max_length=255)),
                ('bio', models.TextField()),
                ('avatar_url', models.URLField()),
                ('interest', models.JSONField()),
                ('createdAt', models.DateTimeField()),
                ('updatedAt', models.DateTimeField()),
                ('profile_url', models.URLField()),
                ('followed_by', models.ManyToManyField(related_name='followers', to='main.users')),
                ('following', models.ManyToManyField(related_name='following_users', to='main.users')),
            ],
        ),
        migrations.CreateModel(
            name='Notiifications',
            fields=[
                ('notification_id', models.CharField(max_length=255, primary_key=True, serialize=False)),
                ('type', models.IntegerField()),
                ('notification_url', models.URLField()),
                ('seen', models.BooleanField()),
                ('createdAt', models.DateTimeField()),
                ('updatedAt', models.DateTimeField()),
                ('readAt', models.DateTimeField(blank=True, null=True)),
                ('user', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='main.users')),
            ],
        ),
        migrations.CreateModel(
            name='Posts',
            fields=[
                ('post_id', models.CharField(max_length=255, primary_key=True, serialize=False)),
                ('description', models.TextField()),
                ('image_url', models.URLField()),
                ('upvote_count', models.IntegerField()),
                ('downvote_count', models.IntegerField()),
                ('createdAt', models.DateTimeField()),
                ('updatedAt', models.DateTimeField()),
                ('post_url', models.URLField()),
            ],
        ),
        migrations.CreateModel(
            name='Question',
            fields=[
                ('question_id', models.CharField(max_length=255, primary_key=True, serialize=False)),
                ('title', models.CharField(max_length=255)),
                ('body', models.TextField()),
                ('createdAt', models.DateTimeField()),
                ('view_count', models.IntegerField()),
                ('upvote_count', models.IntegerField()),
                ('downvote_count', models.IntegerField()),
                ('keywords', models.JSONField()),
                ('question_url', models.URLField()),
            ],
        ),
        migrations.CreateModel(
            name='Topic',
            fields=[
                ('topic_id', models.CharField(max_length=255, primary_key=True, serialize=False)),
                ('cover_img', models.URLField()),
                ('name', models.CharField(max_length=255, unique=True)),
                ('description', models.TextField()),
                ('following_count', models.IntegerField()),
                ('createdAt', models.DateTimeField()),
                ('updatedAt', models.DateTimeField()),
                ('views', models.IntegerField()),
                ('child_topic_id', models.ManyToManyField(related_name='child_topics', to='main.topic')),
                ('parent_topic_id', models.OneToOneField(blank=True, null=True, on_delete=django.db.models.deletion.SET_NULL, to='main.topic')),
            ],
        ),
        migrations.CreateModel(
            name='Vote',
            fields=[
                ('vote_id', models.CharField(max_length=255, primary_key=True, serialize=False)),
                ('type', models.BooleanField()),
                ('votable_type', models.IntegerField()),
                ('votable_id', models.CharField(max_length=255)),
                ('createdAt', models.DateTimeField()),
            ],
        ),
        migrations.DeleteModel(
            name='User',
        ),
        migrations.CreateModel(
            name='Education',
            fields=[
                ('user', models.OneToOneField(on_delete=django.db.models.deletion.CASCADE, primary_key=True, serialize=False, to='main.users')),
                ('school', models.CharField(max_length=255)),
                ('primary_major', models.CharField(max_length=255)),
                ('secondary_major', models.CharField(max_length=255)),
                ('degree_type', models.CharField(max_length=25)),
                ('graduation_year', models.IntegerField()),
            ],
        ),
        migrations.CreateModel(
            name='Employement',
            fields=[
                ('user', models.OneToOneField(on_delete=django.db.models.deletion.CASCADE, primary_key=True, serialize=False, to='main.users')),
                ('position', models.CharField(max_length=50)),
                ('company', models.CharField(max_length=255)),
                ('start_year', models.IntegerField()),
                ('end_year', models.IntegerField()),
                ('currently_working', models.BooleanField()),
            ],
        ),
        migrations.CreateModel(
            name='Location',
            fields=[
                ('user', models.OneToOneField(on_delete=django.db.models.deletion.CASCADE, primary_key=True, serialize=False, to='main.users')),
                ('loc', models.CharField(max_length=255)),
                ('start_year', models.IntegerField()),
                ('end_year', models.IntegerField()),
                ('currently_living', models.BooleanField()),
            ],
        ),
        migrations.AddField(
            model_name='comment',
            name='user',
            field=models.OneToOneField(on_delete=django.db.models.deletion.CASCADE, to='main.users'),
        ),
        migrations.AddField(
            model_name='answer',
            name='user',
            field=models.OneToOneField(on_delete=django.db.models.deletion.CASCADE, to='main.users'),
        ),
        migrations.AddField(
            model_name='users',
            name='bookmarked_posts',
            field=models.ManyToManyField(related_name='bookmarked_users', to='main.question'),
        ),
        migrations.AddField(
            model_name='question',
            name='user',
            field=models.OneToOneField(on_delete=django.db.models.deletion.CASCADE, to='main.users'),
        ),
        migrations.AddField(
            model_name='answer',
            name='question',
            field=models.OneToOneField(on_delete=django.db.models.deletion.CASCADE, to='main.question'),
        ),
        migrations.AddField(
            model_name='question',
            name='topic',
            field=models.OneToOneField(on_delete=django.db.models.deletion.CASCADE, to='main.topic'),
        ),
        migrations.AddField(
            model_name='vote',
            name='user',
            field=models.OneToOneField(on_delete=django.db.models.deletion.CASCADE, to='main.users'),
        ),
    ]
